{"version":3,"sources":["App.tsx","components/GoodList.tsx","index.tsx"],"names":["SortType","GoodsList","props","goods","map","good","goodsFromServer","App","useState","NONE","sortType","setSortType","reverse","setReverse","visibleGoods","preparedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","getPreparedGoods","className","onClick","type","cn","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0ECZQC,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,SDNJC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAEGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAMO,EAAgB,WAC3B,MAAgCC,mBAASR,EAASS,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KAEMC,EA/BR,SACEX,EACAO,EACAE,GAEA,IAAMG,EAAa,YAAOZ,GAmB1B,OAjBIO,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKV,EAASmB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKlB,EAASqB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXV,GACFG,EAAcH,UAGTG,EAOcQ,CAAiBjB,EAAiBI,EAAUE,GAmBjE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QArBqB,WAC3Bd,EAAYX,EAASmB,WAqBfO,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYjB,IAAaV,EAASmB,WAJxC,iCASA,wBACEM,QA1BmB,WACzBd,EAAYX,EAASqB,SA0BfK,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYjB,IAAaV,EAASqB,SAJxC,4BASA,wBACEI,QA/Bc,WACpBZ,GAAYD,IA+BNc,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAaf,IAJnB,sBASEF,IAAaV,EAASS,MAAQG,IAC9B,wBACEa,QArCU,WAClBd,EAAYX,EAASS,MACrBI,GAAW,IAoCHa,KAAK,SACLF,UAAU,4BAHZ,sBASJ,6BACE,cAAC,EAAD,CAAWrB,MAAOW,UEhH1Bc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e131a348.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodsList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  sortType: SortType,\n  reverse: boolean,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [reverse, setReverse] = useState(false);\n\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortType, reverse);\n\n  const handleSortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReverse = () => {\n    setReverse(!reverse);\n  };\n\n  const handleReset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={handleSortByAlphabet}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={handleSortByLength}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortType !== SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handleReverse}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || reverse) && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n      <ul>\n        <GoodsList goods={visibleGoods} />\n      </ul>\n\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul>\n      {goods.map(good => (\n        <li key={good} data-cy=\"Good\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}